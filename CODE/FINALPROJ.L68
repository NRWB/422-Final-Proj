00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/18/2014 6:31:26 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =00000000                  7  OP_0000     EQU     %0000
00000000                             8  
00000000                             9  
00001000                            10      ORG    $1000
00001000                            11  START:                  ; first instruction of program
00001000                            12  
00001000                            13  * THINK ABOUT ASKING FOR VALID START/END NO NEGATIVE ADDR
00001000                            14  
00001000                            15  * LOAD MSGSTART, ASK FOR INPUT
00001000  43F9 00001044             16          LEA     MSGSTART,A1     * Load MESSAGE START
00001006  103C 000E                 17          MOVE.B  #14,D0          * Trap #14 to display message
0000100A  4E4F                      18          TRAP    #15             * Perform #14
0000100C                            19          
0000100C                            20  * GETS THE STARTING ADDRESS
0000100C  103C 0004                 21          MOVE.B  #4,D0           * Trap #4 gets an input and stores in D1
00001010  4E4F                      22          TRAP    #15             * Perform #15
00001012                            23          
00001012                            24  * MOVE IT TO ANOTHER ADDRESS REGISTER
00001012  2441                      25          MOVEA.L D1,A2           * Move the user input into A2. This is the starting address.
00001014                            26  
00001014                            27  * LOAD MSGSTART, ASK FOR INPUT
00001014  43F9 0000105C             28          LEA     MSGEND,A1       * Load MESSAGE END
0000101A  303C 000E                 29          MOVE.W  #14,D0          * Trap #14 to display message
0000101E  4E4F                      30          TRAP    #15             * Perform #14
00001020                            31          
00001020                            32  * GETS THE ENDING ADDRESS
00001020  103C 0004                 33          MOVE.B  #4,D0           * Trap #4 gets an inptu and stores in D1
00001024  4E4F                      34          TRAP    #15             * Perform Trap #4
00001026  2A01                      35          MOVE.L  D1,D5           * Move the ending address into D5. This is the ending address.
00001028                            36          
00001028  43F9 00001072             37          LEA     NEWLINE,A1      * Store newline variable for seperating operations
0000102E                            38          
0000102E  321A                      39  LOOP    MOVE.W  (A2)+,D1        * Read an operation into D1        
00001030  103C 0003                 40          MOVE.B  #3,D0           * Print out what we just found
00001034  4E4F                      41          TRAP    #15             * Perform Trap #3
00001036                            42          
00001036  103C 000E                 43          MOVE.B  #14,D0          * Print a newline
0000103A  4E4F                      44          TRAP    #15
0000103C                            45          
0000103C  BA4A                      46          CMP     A2,D5           * Compare the starting address to ending address
0000103E  6700 2FCA                 47          BEQ     END             * If they are equal, branch 
00001042  60EA                      48          BRA     LOOP            * Otherwise, branch back to LOOP
00001044                            49  
00001044                            50  
00001044  =0000000D                 51  CR      EQU     $0D
00001044  =0000000A                 52  LF      EQU     $0A
00001044= 45 4E 54 45 52 20 ...     53  MSGSTART    DC.B    'ENTER START ADDRESS: ',CR,LF,0
0000105C= 45 4E 54 45 52 20 ...     54  MSGEND      DC.B    'ENTER END ADDRESS: ',CR,LF,0
00001072= 0D 0A 00                  55  NEWLINE     DC.B    CR,LF,0
00001075                            56  
00001075                            57  * Put variables and constants here
00001075                            58  
00004000                            59      ORG $4000
00004000                            60  
00004000  103C 009A                 61      MOVE.B   #%10011010, D0
00004004  123C 00A9                 62      MOVE.B   #%10101001, D1
00004008  D200                      63      ADD.B    D0,D1
0000400A                            64  
0000400A                            65  END
0000400A                            66      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CR                  D
END                 400A
LF                  A
LOOP                102E
MSGEND              105C
MSGSTART            1044
NEWLINE             1072
OP_0000             0
START               1000
