00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/17/2014 8:19:23 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  * THINK ABOUT ASKING FOR VALID START/END NO NEGATIVE ADDR
00001000                            11  
00001000                            12  * LOAD MSGSTART, ASK FOR INPUT
00001000  43F9 00001038             13          LEA     MSGSTART,A1     * Load MESSAGE START
00001006  103C 000E                 14          MOVE.B  #14,D0          * Trap #14 to display message
0000100A  4E4F                      15          TRAP    #15             * Perform #14
0000100C                            16          
0000100C                            17  * GETS THE STARTING ADDRESS
0000100C  103C 0004                 18          MOVE.B  #4,D0           * Trap #4 gets an input and stores in D1
00001010  4E4F                      19          TRAP    #15             * Perform #15
00001012                            20          
00001012                            21  * MOVE IT TO ANOTHER ADDRESS REGISTER
00001012  2441                      22          MOVEA.L D1,A2           * Move the user input into A2. This is the starting address.
00001014                            23  
00001014                            24  * LOAD MSGSTART, ASK FOR INPUT
00001014  43F9 00001050             25          LEA     MSGEND,A1       * Load MESSAGE END
0000101A  303C 000E                 26          MOVE.W  #14,D0          * Trap #14 to display message
0000101E  4E4F                      27          TRAP    #15             * Perform #14
00001020                            28          
00001020                            29  * GETS THE ENDING ADDRESS
00001020  103C 0004                 30          MOVE.B  #4,D0           * Trap #4 gets an inptu and stores in D1
00001024  4E4F                      31          TRAP    #15             * Perform Trap #4
00001026  2A01                      32          MOVE.L  D1,D5           * Move the ending address into D5. This is the ending address.
00001028                            33          
00001028  321A                      34  LOOP    MOVE.W  (A2)+,D1        * Read an operation into D1        
0000102A  103C 0003                 35          MOVE.B  #3,D0           * Print out what we just found
0000102E  4E4F                      36          TRAP    #15             * Perform Trap #3
00001030  BA4A                      37          CMP     A2,D5           * Compare the starting address to ending address
00001032  6700 2FD6                 38          BEQ     END             * If they are equal, branch 
00001036  60F0                      39          BRA     LOOP            * Otherwise, branch back to LOOP
00001038                            40  
00001038                            41  
00001038  =0000000D                 42  CR      EQU     $0D
00001038  =0000000A                 43  LF      EQU     $0A
00001038= 45 4E 54 45 52 20 ...     44  MSGSTART    DC.B    'ENTER START ADDRESS: ',CR,LF,0
00001050= 45 4E 54 45 52 20 ...     45  MSGEND      DC.B    'ENTER END ADDRESS: ',CR,LF,0
00001066                            46  
00001066                            47  * Put variables and constants here
00001066                            48  
00004000                            49      ORG $4000
00004000                            50  
00004000  103C 009A                 51      MOVE.B   #%10011010, D0
00004004  123C 00A9                 52      MOVE.B   #%10101001, D1
00004008  D200                      53      ADD.B    D0,D1
0000400A                            54  
0000400A                            55  END
0000400A                            56      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CR                  D
END                 400A
LF                  A
LOOP                1028
MSGEND              1050
MSGSTART            1038
START               1000
